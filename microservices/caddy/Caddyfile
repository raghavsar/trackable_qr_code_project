qr.phonon.io {
    # Use a self-signed certificate for now
    tls internal

    # Enable HTTP compression
    encode gzip zstd

    # Handle ACME challenge requests for Let's Encrypt SSL
    handle /.well-known/acme-challenge/* {
        respond 200
    }

    # Handle requests starting with /api/
    # Proxy them to the api-gateway service on port 8000
    handle_path /api/* {
        reverse_proxy api-gateway:8000 {
            # Trust all IPs for testing - in production, limit this to your actual proxy IPs
            trusted_proxies private_ranges
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-Host {host}
        }
    }

    # TODO: Add a 'handle' block here if you also want Caddy
    # to serve your frontend application from the same domain.
    # Example:
    # handle {
    #     root * /path/to/your/frontend/build
    #     file_server
    #     try_files {path} /index.html
    # }

    # Logging (optional, Caddy logs by default)
    log {
        output stderr
        level INFO
        format json # Use Caddy's standard JSON log format
    }
} 